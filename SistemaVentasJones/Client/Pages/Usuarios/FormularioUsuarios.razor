@inject HttpClient Http
@inject NavigationManager NavigationManager
@using System.Text.Json

<EditForm Model="@applicationUser" OnValidSubmit="@OnValidSubmit">
    <div class="form-field mt-2 mb-2">
        <div class="row">
            <div class="col-6">
                <div class="form-group row">
                    <label class="col-4 col-form-label">Nombre de usuario</label>
                    <div class="col">
                        <div class="input-group">
                            <MudTextField @bind-Value="@applicationUser.UserName" Label="Nombre de usuario" Variant="Variant.Outlined" oninput="this.value=this.value.toUpperCase()"
                                          Margin="Margin.Dense"></MudTextField>
                            <ValidationMessage For="@(() => applicationUser.UserName)" />
                        </div>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-4 col-form-label">Nombre</label>
                    <div class="col">
                        <div class="input-group">
                            <MudTextField @bind-Value="@applicationUser.NombreyApellido" Label="Nombre" Variant="Variant.Outlined" oninput="this.value=this.value.toUpperCase()"
                                          slash Margin="Margin.Dense"></MudTextField>

                        </div>
                        <ValidationMessage For="@(() => applicationUser.NombreyApellido)" />
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-4 col-form-label">Apellidos</label>
                    <div class="col">
                        <div class="input-group">
                            <MudTextField @bind-Value="@applicationUser.Apellido" Label="Apellidos" Variant="Variant.Outlined" oninput="this.value=this.value.toUpperCase()"
                                          Margin="Margin.Dense"></MudTextField>
                            <ValidationMessage For="@(() => applicationUser.Apellido)" />
                        </div>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-4 col-form-label">Cédula</label>
                    <div class="col">
                        <div class="input-group">
                            <MudTextField @bind-Value="@applicationUser.Cedula" Label="Formato de Cedula: 000-000000-0000A" Variant="Variant.Outlined" oninput="this.value=this.value.toUpperCase()"
                                          Margin="Margin.Dense"></MudTextField>
                            <ValidationMessage For="@(() => applicationUser.Cedula)" />
                        </div>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-4 col-form-label">Teléfono</label>
                    <div class="col">
                        <div class="input-group">
                            <MudTextField @bind-Value="@applicationUser.PhoneNumber" Label="Télefono" Variant="Variant.Outlined" oninput="this.value=this.value.toUpperCase()"
                                          Margin="Margin.Dense"></MudTextField>
                            <ValidationMessage For="@(() => applicationUser.PhoneNumber)" />
                        </div>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-4 col-form-label">Email</label>
                    <div class="col">
                        <div class="input-group">
                            <MudTextField @bind-Value="@applicationUser.Email" Label="Email" Variant="Variant.Outlined" oninput="this.value=this.value.toUpperCase()"
                                          Margin="Margin.Dense"></MudTextField>
                            <ValidationMessage For="@(() => applicationUser.Email)" />
                        </div>
                    </div>
                </div>                              
            </div>
        </div>
        <button type="submit" class="btn btn-block btn-success">
            <i class="oi oi-check "></i>
            <text style="color:white"></text>
        </button>
    </div>
    <DataAnnotationsValidator />
</EditForm>

@code {

    [Parameter] public ApplicationUser applicationUser { get; set; } = new ApplicationUser();

    [Parameter] public string TextBotonSubmit { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
}