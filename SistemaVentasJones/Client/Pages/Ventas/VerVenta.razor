@page "/ver-venta/{idventa:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@attribute [Authorize(Roles = "admin, empleado")]


@using System.Text.Json



<div class="d-flex justify-content-between mb-2">
    <div class="btn-group">
        <button id="miboton" class="btn btn-sm btn-secondary d-print-none" @onclick="@Volver">
            <i class="oi oi-arrow-circle-left"></i> Volver atrás
        </button>
        <button id="miboton" class="btn btn-sm btn-primary d-print-none" onclick="window.print()">
            Imprimir
        </button>
        <button id="miboton" class="btn btn-sm btn-primary d-print-none" @onclick="@NuevaVenta" V>
            Nueva venta
        </button>
    </div>
    <div class="btn-group">
    </div>
</div>


@if (venta != null)
{
    <div class="card m-1" style="border-color: #fff; border-style: dotted; box-shadow: 22px 3px 39px 1px rgba(0,0,0,0.51);">
        <div class="card-body">
            <div class="cabecera">
                <img src="https://i.ibb.co/GWMMsfX/JonesIco.png" alt="logo" class="img-fluid">
            </div>

            <div class="informacion-fija">
                <small class="lema">ACJONES, Lo mejor en accesorios para tu vehiculo </small> <br /><br />
                <small><b>Dirección:</b>@ListaAjustes.Direccion</small><br />
                <small><b>N° factura:</b> @venta.Numero.ToString("D5")</small><br />
                <small><b>RUC:</b> @ListaAjustes.RUC</small> <br />
                <small><b>Teléfono:</b> @ListaAjustes.Telefono</small><br />
                <small><b>Email:</b> @ListaAjustes.Email</small> <br />
                <small><b>Propietario:</b> @ListaAjustes.NombrePropietario</small><br />
                <small><b>Fecha:</b> @venta.Fecha</small><br /><br />
                <strong>*** NO SE ACEPTAN DEVOLUCIONES ***</strong><br>
                <strong>*** Revise sus articulos ***</strong>
            </div>

            <div class="info-cliente">
                @if (venta.ClienteId != null)
                {
                    <hr class="short-line" />
                    <hr class="short-line" />
                    <div>
                        @if (venta.ClienteId != null)
                        {
                            <small><b>Cliente:</b> @venta.Cliente.Nombre @venta.Cliente.Apellido </small> <br />
                        }
                        else
                        {
                            <small><b>Cliente:</b> CLIENTE GENÉRICO</small> <br />
                        }
                     
                        <small><b>Teléfono:</b> @venta.Cliente.Teléfono</small>
                    </div>
                   
                }
                <hr class="short-line" />
                <hr class="short-line" />
            </div>  
            <div>
                
            </div>


  
            <div class="invoice">
                <div class="header">
                    <h2>Detalle de Compra</h2>
                    
                </div>
                <div class="items">
                    @foreach (var item in venta.DetalleVentas)
                    {
                        <div class="item">
                            <div class="description">
                                <p>@item.Articulo.Nombre</p>
                            </div>
                            <div class="price">
                                <p>Precio: C$ @item.Precio</p>
                            </div>
                            <div class="quantity">
                                <p>Cantidad: @item.Cantidad</p>
                            </div>
                            <div class="discount">
                                <p>Descuento: @item.Descuento %</p>
                            </div>
                            <div class="subtotal">
                                <p>Subtotal con descuento: C$ @Math.Round(@item.TotalFinal, 2)</p>
                            </div>
                           
                        </div>

                       
                    }
                </div>
                <hr class="short-line" />
                <br>
                <hr class="short-line" />
                <br>
                <p class="card-text">
                   @* <div class="cantidad pagada">
                        <p> Paga con: C$ @venta.CantidadPagada</p>
                    </div>*@
                   @* <div class="cantidad pagada">
                        <p> Cambio: C$ @venta.Cambio</p>
                    </div>*@
                  
                                    
                    @foreach (var item in venta.DetalleVentas)
                    {
                        <div class="item">
                            <div class="description">
                                <p> Subtotal sin descuento: @Math.Round(@item.SubTotal,2)</p>
                            </div>                                                 
                        </div>
                       
                    }

                    @if (venta.FormaPago == FormasPago.Cordoba)
                    {
                        <h6><b>TOTAL</b></h6>
                        <h5><b>C$ @Math.Round(venta.Total, 2)</b></h5>
                    }
                    else
                    {
                        <h6><b>TOTAL</b></h6>
                        <h5><b>U$ @Math.Round(venta.TotalDolares, 2)</b></h5>
                        <h5><b>C$ @Math.Round(venta.Total, 2) | T/C: @venta.TasaCambio</b></h5>
                    }
                   
                    
                </p>
            </div>

           
        </div>
    </div>


}

@code {
    public Venta venta { get; set; }

    [Parameter] public int idventa { get; set; }


    public Configuracion ListaAjustes { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var httpResponse = await Http.GetAsync($"api/ventas/{idventa}");
        if (httpResponse.IsSuccessStatusCode)
        {
            var responseString = await httpResponse.Content.ReadAsStringAsync();
            venta = JsonSerializer.Deserialize<Venta>(responseString,
                new JsonSerializerOptions() { PropertyNameCaseInsensitive = true });
        }
        else
        {
            await JS.InvokeVoidAsync("simple", "Error", "Venta no encontrada.", "error");
            NavigationManager.NavigateTo("lista-ventas");
        }
        await CargarAjustes();

    }



    void Volver()
    {
        NavigationManager.NavigateTo("lista-ventas");
    }
    void NuevaVenta()
    {
        NavigationManager.NavigateTo("crear-venta");
    }

    async Task CargarAjustes()
    {
        var httpResponse = await Http.GetAsync($"api/configuracion/1");
        if (httpResponse.IsSuccessStatusCode)
        {
            var responseString = await httpResponse.Content.ReadAsStringAsync();
            ListaAjustes = JsonSerializer.Deserialize<Configuracion>(responseString,
                new JsonSerializerOptions() { PropertyNameCaseInsensitive = true });
        }
        else
        {
            await JS.InvokeVoidAsync("simple", "Error", "Venta no encontrada.", "error");
            NavigationManager.NavigateTo("lista-ventas");
        }
    }

}
<style>
    body {
        font-family: Consolas;
    }
    .d-flex {
        display: flex;
    }

    .justify-content-between {
        justify-content: space-between;
    }

    .mb-2 {
        margin-bottom: 2rem;
    }

    .btn-group {
        display: flex;
    }

    #miboton {
        margin-right: 1rem;
    }
    
      
    

    .card {
        border-color: #fff;
        border-style: dotted;
        box-shadow: 22px 3px 39px 1px rgba(0,0,0,0.51);
        margin: 1rem;
    }

    .img-fluid {
        max-width: 100%;
        height: auto;
    }

    .lema {
        font-size: small;
    }

    .info-cliente hr {
        margin-top: 0.5rem;
        margin-bottom: 0.5rem;
    }

    .table {
        width: 100%;
        margin-top: 1rem;
        margin-bottom: 1rem;
        color: #212529;
    }

        .table th,
        .table td {
            padding: 0.75rem;
            vertical-align: top;
            border-top: 1px solid #dee2e6;
        }

    .text-right {
        text-align: right;
    }

    .m-4 {
        margin: 1.5rem;
    }

    .short-line {
        width: 25%;
        margin: 0px 0 0px 0px;
        border: 0.5px solid #ccc;
    }
</style>
   